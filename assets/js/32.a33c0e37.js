(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{379:function(e,t,r){"use strict";r.r(t);var s=r(43),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"sleeping"}},[e._v("Sleeping")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/Sleeping.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("英文原地址"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("code",[e._v("Matter.Sleeping")]),e._v("模块包含了管理睡眠状态物体的方法。")]),e._v(" "),r("h2",{attrs:{id:"方法"}},[e._v("方法")]),e._v(" "),r("h3",{attrs:{id:"matter-sleeping-aftercollisions-pairs-timescale"}},[e._v("Matter.Sleeping.afterCollisions(pairs, timeScale)")]),e._v(" "),r("p",[e._v("根据传入的碰撞对("),r("code",[e._v("pairs")]),e._v(")，唤醒处于睡眠状态的物体。")]),e._v(" "),r("p",[r("strong",[e._v("参数：")]),r("br"),e._v(" "),r("code",[e._v("pairs")]),e._v(" Pair[]"),r("br"),e._v(" "),r("code",[e._v("timeScale")]),e._v(" Number")]),e._v(" "),r("h3",{attrs:{id:"matter-sleeping-set-body-issleeping"}},[e._v("Matter.Sleeping.set(body, isSleeping)")]),e._v(" "),r("p",[e._v("设置一个物体是否处于睡眠状态。")]),e._v(" "),r("p",[r("strong",[e._v("参数：")]),r("br"),e._v(" "),r("code",[e._v("body")]),e._v(" Body"),r("br"),e._v(" "),r("code",[e._v("isSleeping")]),e._v(" Boolean")]),e._v(" "),r("h3",{attrs:{id:"matter-sleeping-update-bodies-timescale"}},[e._v("Matter.Sleeping.update(bodies, timeScale)")]),e._v(" "),r("p",[e._v("物体处于睡眠状态还激活状态取决于动作。")]),e._v(" "),r("p",[r("strong",[e._v("参数：")]),r("br"),e._v(" "),r("code",[e._v("pairs")]),e._v(" Pair[]"),r("br"),e._v(" "),r("code",[e._v("timeScale")]),e._v(" Number")])])}),[],!1,null,null,null);t.default=i.exports}}]);