(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{357:function(t,e,o){"use strict";o.r(e);var v=o(43),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"composite"}},[t._v("Composite")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/Composites.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文原地址"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("code",[t._v("Matter.Composite")]),t._v("模块包含了用于创建和操作复合体的方法。复合体是"),o("code",[t._v("Matter.Body")]),t._v("、"),o("code",[t._v("Matter.Constraint")]),t._v("和其他"),o("code",[t._v("Matter.Composite")]),t._v("的集合，因此复合体是树形结构。"),o("strong",[t._v("在该模块中，请谨记要用函数来修改复合体，不要直接修改它们的属性，这一点很重要。")]),t._v(" 注意"),o("code",[t._v("Matter.World")]),t._v("对象也是"),o("code",[t._v("Matter.Composite")]),t._v("的一个类型，所以所有的复合体方法也能够操作"),o("code",[t._v("Matter.World")]),t._v("。")]),t._v(" "),o("h2",{attrs:{id:"方法"}},[t._v("方法")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-add-composite-object-→-composite"}},[t._v("Matter.Composite.add(composite, object) → Composite")]),t._v(" "),o("p",[t._v("通用添加函数。想传入的复合体当中添加一个或多个刚体、约束条件或复合体。触发"),o("code",[t._v("composite")]),t._v("上的"),o("code",[t._v("beforeAdd")]),t._v("和"),o("code",[t._v("afterAdd")]),t._v("事件。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v("  Composite"),o("br"),t._v(" "),o("code",[t._v("object")]),t._v("   Object")]),t._v(" "),o("p",[t._v("返回值："),o("br"),t._v(" "),o("code",[t._v("Composite")]),t._v(" 添加新对象后的原复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-allbodies-composite-→-body"}},[t._v("Matter.Composite.allBodies(composite) → Body[]")]),t._v(" "),o("p",[t._v("递归地返回传入复合体中的所有物体，包括子复合体中的物体。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v("  Composite")]),t._v(" "),o("p",[t._v("返回值："),o("br"),t._v(" "),o("code",[t._v("Body[]")]),t._v(" 所有物体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-allcomposites-composite-→-composite"}},[t._v("Matter.Composite.allComposites(composite) → Composite[]")]),t._v(" "),o("p",[t._v("递归地返回传入复合体中的所有复合体，包括子复合体中的复合体。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v("  Composite")]),t._v(" "),o("p",[t._v("返回值："),o("br"),t._v(" "),o("code",[t._v("Composite[]")]),t._v(" 所有复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-allconstraints-composite-→-constraint"}},[t._v("Matter.Composite.allConstraints(composite) → Constraint[]")]),t._v(" "),o("p",[t._v("递归地返回传入复合体中的所有约束条件，包括子复合体中的约束条件。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v("  Composite")]),t._v(" "),o("p",[t._v("返回值："),o("br"),t._v(" "),o("code",[t._v("Constraint[]")]),t._v(" 所有复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-bounds-composite-→-bounds"}},[t._v("Matter.Composite.bounds(composite) → Bounds")]),t._v(" "),o("p",[t._v("返回所有复合体边界的并集。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v("  Composite")]),t._v(" "),o("p",[t._v("返回值："),o("br"),t._v(" "),o("code",[t._v("Bounds")]),t._v(" 复合体边界。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-clear-composite-keepstatic-deep-false"}},[t._v("Matter.Composite.clear(composite, keepStatic, [deep=false])")]),t._v(" "),o("p",[t._v("清除传入复合体内的所有物体、限制条件和复合体，可以通过参数选择是否递归清除子元素内部。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v("  Composite"),o("br"),t._v(" "),o("code",[t._v("keepStatic")]),t._v(" Boolean"),o("br"),t._v(" "),o("code",[t._v("[deep=false]")]),t._v(" Boolean "),o("code",[t._v("可选")])]),t._v(" "),o("h3",{attrs:{id:"matter-composite-create-options-→-composite"}},[t._v("Matter.Composite.create([options]) → Composite")]),t._v(" "),o("p",[t._v("创建一个新的复合体。"),o("code",[t._v("options")]),t._v("参数是一个对象，方便您传入覆盖默认值的属性。参见下面的属性部分获取更多细节信息。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("[options]")]),t._v(" Object "),o("code",[t._v("可选")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite")]),t._v(" 新的复合体")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-get-composite-id-type-→-object"}},[t._v("Matter.Composite.get(composite, id, type) → Object")]),t._v(" "),o("p",[t._v("根据传入的id和类型递归搜索复合体，如果找不到则返回"),o("code",[t._v("null")]),t._v("。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite"),o("br"),t._v(" "),o("code",[t._v("id")]),t._v(" Number"),o("br"),t._v(" "),o("code",[t._v("type")]),t._v(" String")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Object")]),t._v(" 找到的对象")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-move-compositea-objects-compositeb-→-composite"}},[t._v("Matter.Composite.move(compositeA, objects, compositeB) → Composite")]),t._v(" "),o("p",[t._v("将传入的对象从compositeA移动到compositeB(等于移除后添加)。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("compositeA")]),t._v(" CompositeA"),o("br"),t._v(" "),o("code",[t._v("objects")]),t._v(" Object[]"),o("br"),t._v(" "),o("code",[t._v("compositeB")]),t._v(" CompositeB")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Object")]),t._v(" 找到的对象")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-rebase-composite-→-composite"}},[t._v("Matter.Composite.rebase(composite) → Composite")]),t._v(" "),o("p",[t._v("递归地为复合体中的所有对象分配新id。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite")]),t._v(" 返回复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-remove-composite-object-deep-false-→-composite"}},[t._v("Matter.Composite.remove(composite, object, [deep=false]) → Composite")]),t._v(" "),o("p",[t._v("通用的删除功能。用于删除传入复合体中的一个或多个刚体、约束条件或复合体。可以配置是否对子元素进行递归删除。触发该复合体上的"),o("code",[t._v("beforeRemove")]),t._v("和"),o("code",[t._v("afterRemove")]),t._v("事件。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite"),o("br"),t._v(" "),o("code",[t._v("object")]),t._v(" Object\n"),o("code",[t._v("[deep=false]")]),t._v(" Boolean "),o("code",[t._v("可选")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite")]),t._v(" 返回带有被删除对象的原始复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-rotate-composite-rotation-point-recursive-true"}},[t._v("Matter.Composite.rotate(composite, rotation, point, [recursive=true])")]),t._v(" "),o("p",[t._v("围绕给定的点根据传入的角度旋转复合体中的所有子元素，不赋予任何角速度。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite"),o("br"),t._v(" "),o("code",[t._v("rotation")]),t._v(" Number\n"),o("code",[t._v("point")]),t._v(" Vector\n"),o("code",[t._v("[recursive=true]")]),t._v(" Bool "),o("code",[t._v("可选")])]),t._v(" "),o("h3",{attrs:{id:"matter-composite-scale-composite-scalex-scaley-point-recursive-true"}},[t._v("Matter.Composite.scale(composite, scaleX, scaleY, point, [recursive=true])")]),t._v(" "),o("p",[t._v("基于一个世界坐标点缩放复合体中的所有子元素，包括更新物理属性(质量、面积、轴、惯性)。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite"),o("br"),t._v(" "),o("code",[t._v("scaleX")]),t._v(" Number"),o("br"),t._v(" "),o("code",[t._v("scaleY")]),t._v(" Number"),o("br"),t._v(" "),o("code",[t._v("point")]),t._v(" Vector"),o("br"),t._v(" "),o("code",[t._v("[recursive=true]")]),t._v(" Bool "),o("code",[t._v("可选")])]),t._v(" "),o("h3",{attrs:{id:"matter-composite-setmodified-composite-ismodified-updateparents-false-updatechildren-false"}},[t._v("Matter.Composite.setModified(composite, isModified, [updateParents=false], [updateChildren=false])")]),t._v(" "),o("p",[t._v("设置复合体的"),o("code",[t._v("isModified")]),t._v("标志。如果"),o("code",[t._v("updateParents")]),t._v("值为"),o("code",[t._v("true")]),t._v("，则所有的父元素都会设置(默认值: "),o("code",[t._v("false")]),t._v(")。如果"),o("code",[t._v("updateChildren")]),t._v("值为"),o("code",[t._v("true")]),t._v("，则所有的子元素都会设置(默认值: "),o("code",[t._v("false")]),t._v(")。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite"),o("br"),t._v(" "),o("code",[t._v("isModified")]),t._v(" Boolean"),o("br"),t._v(" "),o("code",[t._v("[updateParents=false]")]),t._v(" Boolean "),o("code",[t._v("可选")]),o("br"),t._v(" "),o("code",[t._v("[updateChildren=false]")]),t._v(" Boolean "),o("code",[t._v("可选")])]),t._v(" "),o("h3",{attrs:{id:"matter-composite-translate-composite-translation-recursive-true"}},[t._v("Matter.Composite.translate(composite, translation, [recursive=true])")]),t._v(" "),o("p",[t._v("基于传入的矢量来移动复合体中的所有子元素，不会赋予任何速度。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite"),o("br"),t._v(" "),o("code",[t._v("translation")]),t._v(" Vector"),o("br"),t._v(" "),o("code",[t._v("[recursive=true]")]),t._v(" Bool "),o("code",[t._v("可选")])]),t._v(" "),o("h2",{attrs:{id:"属性"}},[t._v("属性")]),t._v(" "),o("p",[t._v("以下是复合体在由"),o("code",[t._v("Matter.Composite.create")]),t._v("创建对象时通过"),o("code",[t._v("options")]),t._v("参数传入的对象可以指定的属性。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("属性名")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.bodies")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Body[]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("[]")])]),t._v(" "),o("td",[t._v("物体数组，它是该复合体的直接子元素。若要添加或删除物体，您应该使用"),o("code",[t._v("Composite.add")]),t._v("和"),o("code",[t._v("Composite.remove")]),t._v("方法，而不是直接修改这个属性。如果你想递归地找到所有的后代，你应该使用"),o("code",[t._v("Composite.allBodies")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.composites")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Composite[]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("[]")])]),t._v(" "),o("td",[t._v("复合体数组，它是该复合体的直接子元素的复合体数组。若要添加或删除复合体，您应该使用"),o("code",[t._v("Composite.add")]),t._v("和"),o("code",[t._v("Composite.remove")]),t._v("方法，而不是直接修改这个属性。如果你想递归地找到所有的后代，你应该使用"),o("code",[t._v("Composite.allComposites")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.constraints")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Constraint[]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("[]")])]),t._v(" "),o("td",[t._v("限制条件数组，该复合体直接子元素的限制条件数组。若要添加或删除限制条件，您应该使用"),o("code",[t._v("Composite.add")]),t._v("和"),o("code",[t._v("Composite.remove")]),t._v("方法，而不是直接修改这个属性。如果你想递归地找到所有的后代，你应该使用"),o("code",[t._v("Composite.allConstraints")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.id")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",[t._v("唯一整数标识符，由"),o("code",[t._v("Composite.create")]),t._v("通过"),o("code",[t._v("Common.nextId")]),t._v("创建。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.isModified")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Boolean")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("false")])]),t._v(" "),o("td",[t._v("表示该复合体在当前更新步骤中是否发生修改。大多数"),o("code",[t._v("Matter.Composite")]),t._v("方法会自动将该值设置为"),o("code",[t._v("true")]),t._v("，从而通知引擎有哪些更改要处理。如果您需要手动修改它，那么请使用"),o("code",[t._v("Composite.setModified")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.label")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("String")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v('"Composite"')]),t._v(" "),o("td",[t._v("用于帮助用户识别和管理复合体的任意字符串名称。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.parent")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Composite")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("null")])]),t._v(" "),o("td",[t._v("该复合体的父级复合体。由"),o("code",[t._v("Matter.Composite")]),t._v("方法自动管理。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.plugin")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",[t._v("为存储插件特定属性而保留的对象。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.type")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("String")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v('"Composite"')]),t._v(" "),o("td",[t._v("表示对象类型的字符串。")])])])]),t._v(" "),o("h2",{attrs:{id:"事件"}},[t._v("事件")]),t._v(" "),o("p",[t._v("以下事件均由"),o("code",[t._v("Matter.Composite.create")]),t._v("创建的对象派发，而后由使用"),o("code",[t._v("Matter.Events.on")]),t._v("订阅了事件的对象接收。")]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-afteradd-callback"}},[t._v('Events.on(composite, "afterAdd", callback)')]),t._v(" "),o("p",[t._v("当"),o("code",[t._v("Composite.add")]),t._v("调用，对象添加完毕后触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 已添加的对象(可以是单个物体、约束条件、复合体或是前面这些的混合数组)。 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-afterremove-callback"}},[t._v('Events.on(composite, "afterRemove", callback)')]),t._v(" "),o("p",[t._v("当"),o("code",[t._v("Composite.remove")]),t._v("调用，对象移除完毕后触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 已移除的对象(可以是单个物体、约束条件、复合体或是前面这些的混合数组)。 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-beforeadd-callback"}},[t._v('Events.on(composite, "beforeAdd", callback)')]),t._v(" "),o("p",[t._v("当"),o("code",[t._v("Composite.add")]),t._v("调用，对象添加之前触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 将要添加的对象(可以是单个物体、约束条件、复合体或是前面这些的混合数组)。 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-beforeremove-callback"}},[t._v('Events.on(composite, "beforeRemove", callback)')]),t._v(" "),o("p",[t._v("当"),o("code",[t._v("Composite.remove")]),t._v("调用，对象移除前触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 将要移除的对象(可以是单个物体、约束条件、复合体或是前面这些的混合数组)。 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);