(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{382:function(t,e,o){"use strict";o.r(e);var v=o(43),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"world"}},[t._v("World")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/World.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文原地址"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("code",[t._v("Matter.World")]),t._v("模块包含了许多用于创建和操作世界对象的方法。"),o("code",[t._v("Matter.World")]),t._v("是一个"),o("code",[t._v("Matter.Composite")]),t._v("聚合体，它包含了"),o("code",[t._v("Matter.Body")]),t._v("、"),o("code",[t._v("Matter.Constraint")]),t._v("和其他的"),o("code",[t._v("Matter.Composite")]),t._v("。"),o("code",[t._v("Matter.World")]),t._v("有一些额外属性，如"),o("code",[t._v("gravity")]),t._v("和"),o("code",[t._v("bounds")]),t._v("。使用"),o("code",[t._v("Matter.Composite")]),t._v("模块中的函数来修改世界对象这一点很重要，不要直接修改它的属性。"),o("code",[t._v("Matter.Composite")]),t._v("中也有一些方法拥有别名，方便开发者阅读。")]),t._v(" "),o("h2",{attrs:{id:"方法"}},[t._v("方法")]),t._v(" "),o("h3",{attrs:{id:"matter-world-add-world-object-→-composite"}},[t._v("Matter.World.add(world, object) → Composite")]),t._v(" "),o("p",[o("code",[t._v("Composite.add")]),t._v("的别名。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("world")]),t._v(" World")]),t._v(" "),o("li",[o("code",[t._v("object")]),t._v(" Object")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite")]),t._v("添加了物体后的世界聚合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-world-addbody-world-body-→-world"}},[t._v("Matter.World.addBody(world, body) → World")]),t._v(" "),o("p",[o("code",[t._v("Composite.addBody")]),t._v("的别名")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("world")]),t._v(" World")]),t._v(" "),o("li",[o("code",[t._v("body")]),t._v(" Body")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("World")]),t._v("添加了刚体后的世界聚合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-world-addcomposite-world-composite-→-world"}},[t._v("Matter.World.addComposite(world, composite) → World")]),t._v(" "),o("p",[o("code",[t._v("Composite.addComposite")]),t._v("的别名。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("world")]),t._v(" World")]),t._v(" "),o("li",[o("code",[t._v("composite")]),t._v(" Composite")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("World")]),t._v("添加了聚合体后的世界聚合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-world-addconstraint-world-constraint-→-world"}},[t._v("Matter.World.addConstraint(world, constraint) → World")]),t._v(" "),o("p",[o("code",[t._v("Composite.addConstraint")]),t._v("的别名。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("world")]),t._v(" World")]),t._v(" "),o("li",[o("code",[t._v("constraint")]),t._v(" Constraint")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("World")]),t._v("添加了聚合体后的世界聚合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-allbodies-composite-→-body"}},[t._v("Matter.Composite.allBodies(composite) → Body[]")]),t._v(" "),o("p",[t._v("递归地返回传入复合体中的所有刚体，包括其子复合体中的所有刚体。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("composite")]),t._v(" Composite")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Body[]")]),t._v(" 所有刚体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-allcomposites-composite-→-composite"}},[t._v("Matter.Composite.allComposites(composite) → Composite[]")]),t._v(" "),o("p",[t._v("递归地返回传入复合体中的所有复合体，包括其子复合体中的所有复合体。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("composite")]),t._v(" Composite")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite[]")]),t._v(" 所有复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-allconstraints-composite-→-constraint"}},[t._v("Matter.Composite.allConstraints(composite) → Constraint[]")]),t._v(" "),o("p",[t._v("递归地返回传入复合体中的所有约束条件，包括其子复合体中的所有约束条件。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("composite")]),t._v(" Composite")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Constraint[]")]),t._v(" 所有约束条件。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-bounds-composite-→-bounds"}},[t._v("Matter.Composite.bounds(composite) → Bounds")]),t._v(" "),o("p",[t._v("返回所有复合体边界的并集。")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("composite")]),t._v(" Composite")])]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Bounds")]),t._v(" 复合边界。")]),t._v(" "),o("h3",{attrs:{id:"matter-world-clear-world-keepstatic"}},[t._v("Matter.World.clear(world, keepStatic)")]),t._v(" "),o("p",[o("code",[t._v("Composite.clear")]),t._v("的别名")]),t._v(" "),o("p",[t._v("参数：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("world")]),t._v(" World")]),t._v(" "),o("li",[o("code",[t._v("keepStatic")]),t._v(" Boolean")])]),t._v(" "),o("h3",{attrs:{id:"matter-world-create-options-→-world"}},[t._v("Matter.World.create(options) → World")]),t._v(" "),o("p",[t._v("创建一个新的世界聚合体。"),o("code",[t._v("options")]),t._v("参数为一个对象，您传入的属性将会覆盖默认值。后面会介绍您可以设置的属性。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("options")]),t._v(" Object")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("World")]),t._v(" 一个新的世界")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-get-composite-id-type-→-object"}},[t._v("Matter.Composite.get(composite, id, type) → Object")]),t._v(" "),o("p",[t._v("递归搜索复合体，寻找与传入的"),o("code",[t._v("type")]),t._v("和"),o("code",[t._v("id")]),t._v("匹配的对象，如果找不到，则为空。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("composite")]),t._v(" Composite\n"),o("code",[t._v("id")]),t._v(" Number\n"),o("code",[t._v("type")]),t._v(" String")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Object")]),t._v(" 寻找的对象，如果找到的话。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-move-compositea-objects-compositeb-→-composite"}},[t._v("Matter.Composite.move(compositeA, objects, compositeB) → Composite")]),t._v(" "),o("p",[t._v("将给定对象从"),o("code",[t._v("compositeA")]),t._v("移动到"),o("code",[t._v("compositeB")]),t._v("(等于移除后再添加)。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("compositeA")]),t._v(" CompositeA\n"),o("code",[t._v("objects")]),t._v(" Object[]\n"),o("code",[t._v("compositeB")]),t._v(" CompositeB")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite")]),t._v(" CompositeA")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-rebase-composite-→-composite"}},[t._v("Matter.Composite.rebase(composite) → Composite")]),t._v(" "),o("p",[t._v("递归地为复合体中的所有对象分配新的id。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("composite")]),t._v(" Composite")]),t._v(" "),o("p",[t._v("返回值：\n"),o("code",[t._v("Composite")]),t._v(" 返回复合体。")]),t._v(" "),o("h3",{attrs:{id:"matter-world-remove-world-object-deep-false-→-composite"}},[t._v("Matter.World.remove(world, object, [deep=false]) → Composite")]),t._v(" "),o("p",[o("code",[t._v("Composite.remove")]),t._v("的别名。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("world")]),t._v(" World\n"),o("code",[t._v("object")]),t._v(" Object\n"),o("code",[t._v("[deep=false]")]),t._v(" Boolean 可选")]),t._v(" "),o("p",[t._v("返回值："),o("br"),t._v(" "),o("code",[t._v("Composite")]),t._v(" 移除了对象后的世界。")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-rotate-composite-rotation-point-recursive-true"}},[t._v("Matter.Composite.rotate(composite, rotation, point, [recursive=true])")]),t._v(" "),o("p",[t._v("围绕传入的"),o("code",[t._v("point")]),t._v("按照传入的角度旋转复合体中的所有子元素，没有角速度。")]),t._v(" "),o("p",[t._v("参数："),o("br"),t._v(" "),o("code",[t._v("composite")]),t._v(" Composite\n"),o("code",[t._v("rotation")]),t._v(" Number\n"),o("code",[t._v("point")]),t._v(" Vector\n"),o("code",[t._v("[recursive=true]")]),t._v(" Bool 可选")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-scale-composite-scalex-scaley-point-recursive-true"}},[t._v("Matter.Composite.scale(composite, scaleX, scaleY, point, [recursive=true])")]),t._v(" "),o("p",[t._v("根据世界坐标点缩放复合体中的所有子元素，物理属性(质量、面积、轴、惯性)也包含在内。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("composite")]),t._v(" Composite\n"),o("code",[t._v("scaleX")]),t._v(" Number\n"),o("code",[t._v("scaleY")]),t._v(" Number\n"),o("code",[t._v("point")]),t._v(" Vector\n"),o("code",[t._v("[recursive=true]")]),t._v(" Bool 可选")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-setmodified-composite-ismodified-updateparents-false-updatechildren-false"}},[t._v("Matter.Composite.setModified(composite, isModified, [updateParents=false], [updateChildren=false])")]),t._v(" "),o("p",[t._v("设置复合体的"),o("code",[t._v("isModified")]),t._v("标志。如果"),o("code",[t._v("updateParents")]),t._v("为"),o("code",[t._v("true")]),t._v("，将对所有的父元素进行设置(默认:"),o("code",[t._v("false")]),t._v(")。如果"),o("code",[t._v("updateChildren")]),t._v("为"),o("code",[t._v("true")]),t._v("，则将对所有子元素进行设置置(默认:"),o("code",[t._v("false")]),t._v(")。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("composite")]),t._v(" Composite\n"),o("code",[t._v("isModified")]),t._v(" Boolean\n"),o("code",[t._v("[updateParents=false]")]),t._v(" Boolean 可选\n"),o("code",[t._v("[updateChildren=false]")]),t._v(" Boolean 可选")]),t._v(" "),o("h3",{attrs:{id:"matter-composite-translate-composite-translation-recursive-true"}},[t._v("Matter.Composite.translate(composite, translation, [recursive=true])")]),t._v(" "),o("p",[t._v("通过传入的相对于当前位置的矢量来转换复合体中的所有子元素，但并不赋予任何速度。")]),t._v(" "),o("p",[t._v("参数：\n"),o("code",[t._v("composite")]),t._v(" Composite\n"),o("code",[t._v("translation")]),t._v(" Vector\n"),o("code",[t._v("[recursive=true]")]),t._v(" Bool 可选")]),t._v(" "),o("h2",{attrs:{id:"属性"}},[t._v("属性")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("属性名")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.bodies")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Body[]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("[]")])]),t._v(" "),o("td",[t._v("复合体直接子元素的"),o("code",[t._v("Body")]),t._v("数组。若要添加或删除"),o("code",[t._v("Body")]),t._v("，您可以使用"),o("code",[t._v("Composite.add")]),t._v("和"),o("code",[t._v("Composite.remove")]),t._v("方法，不要直接修改属性。如果您希望递归查找所有子代中的元素，请使用"),o("code",[t._v("Composite.allBodies")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("world.bounds")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Bounds")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("{ min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }")])]),t._v(" "),o("td",[t._v("定义世界边界的"),o("code",[t._v("Bounds")]),t._v("对象，用以碰撞检测。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.composites")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Composite[]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("[]")])]),t._v(" "),o("td",[t._v("复合体的直接子元素的"),o("code",[t._v("Composite")]),t._v("数组。若要添加或删除复合体，您可以使用"),o("code",[t._v("Composite.add")]),t._v("和"),o("code",[t._v("Composite.remove")]),t._v("方法，不要直接修改属性。如果您希望递归查找所有子代中的元素，请使用"),o("code",[t._v("Composite.allComposites")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.constraints")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Constraint[]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("[]")])]),t._v(" "),o("td",[t._v("复合体的直接子元素的"),o("code",[t._v("Constraint")]),t._v("数组。若要添加或删除复合体，您可以使用"),o("code",[t._v("Composite.add")]),t._v("和"),o("code",[t._v("Composite.remove")]),t._v("方法，不要直接修改属性。如果您希望递归查找所有子代中的元素，请使用"),o("code",[t._v("Composite.allConstraints")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("world.gravity")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Object")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",[t._v("应用到世界的重力。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("world.gravity.scale")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Object")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("0.001")]),t._v(" "),o("td",[t._v("重力缩放因子。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("world.gravity.x")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Object")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),o("td",[t._v("重力的x分量")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("world.gravity.y")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Object")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),o("td",[t._v("重力的y分量")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.id")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Number")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",[t._v("独一无二的数字标识符，由"),o("code",[t._v("Composite.create")]),t._v("通过"),o("code",[t._v("Common.nextId")]),t._v("生成。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.isModified")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Boolean")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("false")])]),t._v(" "),o("td",[t._v("表示在当期步骤中复合体是否已经发生修改的表示。大部分"),o("code",[t._v("Matter.Composite")]),t._v("方法会自动将本项设置为"),o("code",[t._v("true")]),t._v("，以通知引擎要处理的更改。如果需要手动更改，请使用"),o("code",[t._v("Composite.setModified")]),t._v("方法。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.label")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("String")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v('"Composite"')])]),t._v(" "),o("td",[t._v("于帮助用户识别和管理复合体的任意"),o("code",[t._v("String")]),t._v("名称。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.parent")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("Composite")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("null")])]),t._v(" "),o("td",[t._v("该复合体的父"),o("code",[t._v("Composite")]),t._v("。由"),o("code",[t._v("Matter.Composite")]),t._v("方法自动管理。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.plugin")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",{staticStyle:{"text-align":"center"}}),t._v(" "),o("td",[t._v("为存储插件专用属性而保留的对象。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("composite.type")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v("String")])]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[t._v('"Composite"')])]),t._v(" "),o("td",[t._v("表示对象类型的字符串。")])])])]),t._v(" "),o("h2",{attrs:{id:"事件"}},[t._v("事件")]),t._v(" "),o("p",[t._v("以下事件均由"),o("code",[t._v("Matter.World.create")]),t._v("创建的对象派发，而后由使用"),o("code",[t._v("Matter.Events.on")]),t._v("订阅了事件的对象接收。")]),t._v(" "),o("h3",{attrs:{id:"events-on-engine-afteradd-callback"}},[t._v('Events.on(engine, "afterAdd", callback)')]),t._v(" "),o("p",[t._v("在"),o("code",[t._v("Composite.add")]),t._v("调用，对象添加后触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 已添加的对象(可以是单个刚体、约束条件、复合体或以上的混合数组) "),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-afterremove-callback"}},[t._v('Events.on(composite, "afterRemove", callback)')]),t._v(" "),o("p",[t._v("当"),o("code",[t._v("Composite.remove")]),t._v("调用，对象移除后触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 已添加的对象(可以是单个刚体、约束条件、复合体或以上的混合数组) "),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-beforeadd-callback"}},[t._v('Events.on(composite, "beforeAdd", callback)')]),t._v(" "),o("p",[t._v("在"),o("code",[t._v("Composite.add")]),t._v("调用，对象添加前触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 已添加的对象(可以是单个刚体、约束条件、复合体或以上的混合数组) "),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])]),t._v(" "),o("h3",{attrs:{id:"events-on-composite-beforeremove-callback"}},[t._v('Events.on(composite, "beforeRemove", callback)')]),t._v(" "),o("p",[t._v("当"),o("code",[t._v("Composite.remove")]),t._v("调用，对象移除前触发。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),o("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),o("th",[t._v("描述")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),o("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),o("td",[o("strong",[o("code",[t._v("object")])]),o("br"),t._v(" 已添加的对象(可以是单个刚体、约束条件、复合体或以上的混合数组) "),o("br"),t._v(" "),o("strong",[o("code",[t._v("source")])]),t._v(" "),o("br"),t._v(" 事件的源对象 "),o("br"),t._v(" "),o("strong",[o("code",[t._v("name")])]),t._v(" "),o("br"),t._v(" 事件名称")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);