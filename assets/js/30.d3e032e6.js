(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{376:function(t,e,v){"use strict";v.r(e);var n=v(43),_=Object(n.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"runner"}},[t._v("Runner")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/Runner.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文原地址"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("code",[t._v("Matter.Runner")]),t._v("模块是可选的工具模块，提供了游戏循环，能够帮助您在浏览器端处理不当更新的"),v("code",[t._v("Matter.Engine")]),t._v("。主要用于开发和调试，也可用来制作简单的游戏。如果您使用的自己的游戏循环，则不需要"),v("code",[t._v("Matter.Runner")]),t._v("模块，只需要在您的循环中调用"),v("code",[t._v("EngineUpdate(engine, delta)")]),t._v("即可。")]),t._v(" "),v("h2",{attrs:{id:"方法"}},[t._v("方法")]),t._v(" "),v("h3",{attrs:{id:"matter-runner-create-options"}},[t._v("Matter.Runner.create(options)")]),t._v(" "),v("p",[t._v("创建新的"),v("code",[t._v("Runner")]),t._v("。"),v("code",[t._v("options")]),t._v("参数是一个对象，用于传入要覆盖的默认值属性。")]),t._v(" "),v("p",[v("strong",[t._v("参数：")]),v("br"),t._v(" "),v("code",[t._v("options")]),t._v(" Object")]),t._v(" "),v("h3",{attrs:{id:"matter-runner-run-engine"}},[t._v("Matter.Runner.run(engine)")]),t._v(" "),v("p",[t._v("通过在"),v("code",[t._v("requestAnimationFrame")]),t._v("事件中调用"),v("code",[t._v("Runner.tick")]),t._v("来执行"),v("code",[t._v("Matter.Engine")]),t._v("的每一帧。")]),t._v(" "),v("p",[v("strong",[t._v("参数：")]),v("br"),t._v(" "),v("code",[t._v("engine")]),t._v(" Engine")]),t._v(" "),v("h3",{attrs:{id:"matter-runner-start-runner-engine"}},[t._v("Matter.Runner.start(runner, engine)")]),t._v(" "),v("p",[v("code",[t._v("Runner.run")]),t._v("的别名。")]),t._v(" "),v("p",[v("strong",[t._v("参数：")]),v("br"),t._v(" "),v("code",[t._v("runner")]),t._v(" Runner"),v("br"),t._v(" "),v("code",[t._v("engine")]),t._v(" Engine")]),t._v(" "),v("h3",{attrs:{id:"matter-runner-stop-runner"}},[t._v("Matter.Runner.stop(runner)")]),t._v(" "),v("p",[t._v("通过取消动画帧请求事件循环来结束传入"),v("code",[t._v("runner")]),t._v("上"),v("code",[t._v("Runner.run")]),t._v("的执行。如果您只希望暂停引擎，请参阅"),v("code",[t._v("engine.enabled")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("参数：")]),v("br"),t._v(" "),v("code",[t._v("runner")]),t._v(" Runner")]),t._v(" "),v("h3",{attrs:{id:"matter-runner-tick-runner-engine-time"}},[t._v("Matter.Runner.tick(runner, engine, time)")]),t._v(" "),v("p",[t._v("更新引擎和渲染器每一步('tick')的有序循环工具。具有图像平滑、时间校正和固定或动态授时功能。会触发引擎上的"),v("code",[t._v("beofreTick")]),t._v("、"),v("code",[t._v("tick")]),t._v("和"),v("code",[t._v("afterTick")]),t._v("事件。如果您使用的是自己的循环，可以考虑只使用"),v("code",[t._v("Engine.update(engine, delta)")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("参数：")]),v("br"),t._v(" "),v("code",[t._v("runner")]),t._v(" Runner"),v("br"),t._v(" "),v("code",[t._v("engine")]),t._v(" Engine"),v("br"),t._v(" "),v("code",[t._v("time")]),t._v("  Number")]),t._v(" "),v("h2",{attrs:{id:"属性"}},[t._v("属性")]),t._v(" "),v("p",[t._v("以下属性为"),v("code",[t._v("Matter.Runner.create")]),t._v("创建对象时通过"),v("code",[t._v("options")]),t._v("参数传入的配置项。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("属性")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("runner.delta")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v("1000 / 60")])]),t._v(" "),v("td",[t._v("表示两次更新之间的步长(以毫秒为单位)。如果"),v("code",[t._v("engine.timing.isFixed")]),t._v("设置为"),v("code",[t._v("true")]),t._v("。则"),v("code",[t._v("delta")]),t._v("会固定。如果为"),v("code",[t._v("false")]),t._v("， 那么"),v("code",[t._v("delta")]),t._v("会动态变化以保持正确的拟真速度。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("runner.enabled")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v("false")])]),t._v(" "),v("td",[t._v("表示程序是否正在运行")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("runner.isFixed")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v("false")])]),t._v(" "),v("td",[t._v("表示运行程序是否应该使用固定的时间步长(否则为弹性值)。如果步长是固定的，那么拟真速度将根据帧率进行改变(而行为是确定的)。如果时间步长是弹性的，那么拟真速度则为恒定(大约是这样，但以确定性为代价)")])])])]),t._v(" "),v("h2",{attrs:{id:"事件"}},[t._v("事件")]),t._v(" "),v("p",[t._v("以下事件均由"),v("code",[t._v("Matter.Runner.create")]),t._v("创建的对象派发，而后由使用"),v("code",[t._v("Matter.Events.on")]),t._v("订阅了事件的对象接收。")]),t._v(" "),v("h3",{attrs:{id:"events-on-runner-aftertick-callback"}},[t._v('Events.on(runner, "afterTick", callback)')]),t._v(" "),v("p",[t._v("在每一帧结束后触发，在引擎更新和渲染后。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),v("td",[v("strong",[v("code",[t._v("timestamp")])]),t._v(" "),v("code",[t._v("Number")]),v("br"),t._v(" 事件的"),v("code",[t._v("engine.timing.timestamp")]),t._v(" "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("source")])]),t._v(" "),v("br"),t._v(" 事件的源对象 "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("name")])]),t._v(" "),v("br"),t._v(" 事件名称")])])])]),t._v(" "),v("h3",{attrs:{id:"events-on-runner-afterupdate-callback"}},[t._v('Events.on(runner, "afterUpdate", callback)')]),t._v(" "),v("p",[t._v("更新后触发。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),v("td",[v("strong",[v("code",[t._v("timestamp")])]),t._v(" "),v("code",[t._v("Number")]),v("br"),t._v(" 事件的"),v("code",[t._v("engine.timing.timestamp")]),t._v(" "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("source")])]),t._v(" "),v("br"),t._v(" 事件的源对象 "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("name")])]),t._v(" "),v("br"),t._v(" 事件名称")])])])]),t._v(" "),v("h3",{attrs:{id:"events-on-runner-beforetick-callback"}},[t._v('Events.on(runner, "beforeTick", callback)')]),t._v(" "),v("p",[t._v("在每一帧开始时触发，在对引擎或计时进行任何更新之前。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),v("td",[v("strong",[v("code",[t._v("timestamp")])]),t._v(" "),v("code",[t._v("Number")]),v("br"),t._v(" 事件的"),v("code",[t._v("engine.timing.timestamp")]),t._v(" "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("source")])]),t._v(" "),v("br"),t._v(" 事件的源对象 "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("name")])]),t._v(" "),v("br"),t._v(" 事件名称")])])])]),t._v(" "),v("h3",{attrs:{id:"events-on-runner-beforeupdate-callback"}},[t._v('Events.on(runner, "beforeUpdate", callback)')]),t._v(" "),v("p",[t._v("更新前触发。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),v("td",[v("strong",[v("code",[t._v("timestamp")])]),t._v(" "),v("code",[t._v("Number")]),v("br"),t._v(" 事件的"),v("code",[t._v("engine.timing.timestamp")]),t._v(" "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("source")])]),t._v(" "),v("br"),t._v(" 事件的源对象 "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("name")])]),t._v(" "),v("br"),t._v(" 事件名称")])])])]),t._v(" "),v("h3",{attrs:{id:"events-on-runner-tick-callback"}},[t._v('Events.on(runner, "tick", callback)')]),t._v(" "),v("p",[t._v("在引擎时间更新前触发，仅处于更新前。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("payload")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("event")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),v("td",[v("strong",[v("code",[t._v("timestamp")])]),t._v(" "),v("code",[t._v("Number")]),v("br"),t._v(" 事件的"),v("code",[t._v("engine.timing.timestamp")]),t._v(" "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("source")])]),t._v(" "),v("br"),t._v(" 事件的源对象 "),v("br"),v("br"),t._v(" "),v("strong",[v("code",[t._v("name")])]),t._v(" "),v("br"),t._v(" 事件名称")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);