(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{358:function(v,_,o){"use strict";o.r(_);var e=o(43),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,o=v._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[o("h1",{attrs:{id:"common"}},[v._v("Common")]),v._v(" "),o("p",[o("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/Common.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("英文原地址"),o("OutboundLink")],1)]),v._v(" "),o("p",[o("code",[v._v("Matter.Common")]),v._v("模块包含了所有模块的通用方法。")]),v._v(" "),o("h2",{attrs:{id:"方法"}},[v._v("方法")]),v._v(" "),o("h3",{attrs:{id:"matter-common-chain-funcs-→-function"}},[v._v("Matter.Common.chain(funcs...) → Function")]),v._v(" "),o("p",[v._v("接收 n 个函数作为参数，并返回一个按顺序调用它们的新函数。在新函数调用时的参数也将传递给每个函数。"),o("code",[v._v("this")]),v._v("的值将指向链式调用的最后非"),o("code",[v._v("undefined")]),v._v("的返回值。因此，如果传入的函数没有返回值，则保留先前的值。在所有传入的函数均调用完毕后，新函数返回最后一个返回值(如果有的话)。如果传入的函数时一个链式函数，那么它会被扁平化。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("funcs")]),v._v(" Function "),o("code",[v._v("多个")]),v._v(" 将要链式调用的函数")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nFunction 按顺序调用传入函数的新函数。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-chainpathafter-base-path-func-→-function"}},[v._v("Matter.Common.chainPathAfter(base, path, func) → Function")]),v._v(" "),o("p",[v._v("在传入的相对于"),o("code",[v._v("base")]),v._v("的"),o("code",[v._v("path")]),v._v("上接续一个函数在原链式函数之后执行。请参阅"),o("code",[v._v("Common.chain")]),v._v("文档。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("base")]),v._v(" Object 基本对象。"),o("br"),v._v(" "),o("code",[v._v("path")]),v._v(" String 相对于"),o("code",[v._v("base")]),v._v("的路径。"),o("br"),v._v(" "),o("code",[v._v("func")]),v._v(" Function 要接续调用链的函数。")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nFunction 取代原有函数的链式方法。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-chainpathbefore-base-path-func-→-function"}},[v._v("Matter.Common.chainPathBefore(base, path, func) → Function")]),v._v(" "),o("p",[v._v("在传入的相对于"),o("code",[v._v("base")]),v._v("的"),o("code",[v._v("path")]),v._v("上桥接一个函数在原链式函数之前执行。请参阅"),o("code",[v._v("Common.chain")]),v._v("文档。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("base")]),v._v(" Object 基本对象。"),o("br"),v._v(" "),o("code",[v._v("path")]),v._v(" String 相对于"),o("code",[v._v("base")]),v._v("的路径。"),o("br"),v._v(" "),o("code",[v._v("func")]),v._v(" Function 要桥接到调用链之前的函数。")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nFunction 取代原有函数的链式方法")]),v._v(" "),o("h3",{attrs:{id:"matter-common-choose-choices-→-object"}},[v._v("Matter.Common.choose(choices) → Object")]),v._v(" "),o("p",[v._v("以相等的概率从列表中随机选取一个值。该方法使用了随机种子生成器。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("choices")]),v._v(" Array")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nObject 从数组中选取的随机值。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-clamp-value-min-max-→-number"}},[v._v("Matter.Common.clamp(value, min, max) → Number")]),v._v(" "),o("p",[v._v("返回夹在最大值和最小值之间的"),o("code",[v._v("value")]),v._v("。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("value")]),v._v(" Number"),o("br"),v._v(" "),o("code",[v._v("min")]),v._v(" Number 相对于"),o("code",[v._v("base")]),v._v("的路径。"),o("br"),v._v(" "),o("code",[v._v("max")]),v._v(" Number 要桥接到调用链之前的函数。")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nNumber 夹在最小和最大之间的值(包括最大值)")]),v._v(" "),o("h3",{attrs:{id:"matter-common-clone-obj-deep-→-obj"}},[v._v("Matter.Common.clone(obj, deep) → obj")]),v._v(" "),o("p",[v._v("创建一个对象的克隆，如果"),o("code",[v._v("deep")]),v._v("为"),o("code",[v._v("true")]),v._v("则进行深拷贝。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object"),o("br"),v._v(" "),o("code",[v._v("deep")]),v._v(" Bool")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nobj 克隆后的对象。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-colortonumber-colorstring-→-number"}},[v._v("Matter.Common.colorToNumber(colorString) → Number")]),v._v(" "),o("p",[v._v("将CSS十六进制颜色字符串转换为整数。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("colorString")]),v._v(" String")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nNumber 表示CSS十六进制颜色字符串的数字。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-extend-obj-deep-→"}},[v._v("Matter.Common.extend(obj, deep) →")]),v._v(" "),o("p",[v._v("使用第二个参数中的对象扩展第一个参数中的对象。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object"),o("br"),v._v(" "),o("code",[v._v("deep")]),v._v(" Bool")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nobj 扩展后的对象")]),v._v(" "),o("h3",{attrs:{id:"matter-common-get-obj-path-begin-end-→"}},[v._v("Matter.Common.get(obj, path, [begin], [end]) →")]),v._v(" "),o("p",[v._v("获取相对于"),o("code",[v._v("path")]),v._v("字符串的"),o("code",[v._v("base")]),v._v("。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object 基本对象"),o("br"),v._v(" "),o("code",[v._v("path")]),v._v(" String 相对于"),o("code",[v._v("base")]),v._v('的路径，例："Foo.Bar.baz"'),o("br"),v._v(" "),o("code",[v._v("[begin]")]),v._v(" Number "),o("code",[v._v("可选")]),v._v(" 切割路径的起始点"),o("br"),v._v(" "),o("code",[v._v("[end]")]),v._v(" Number "),o("code",[v._v("可选")]),v._v(" 切割路径的结束点")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\n传入路径的对象。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-indexof-haystack-needle-→-number"}},[v._v("Matter.Common.indexOf(haystack, needle) → Number")]),v._v(" "),o("p",[v._v("跨浏览的兼容版"),o("code",[v._v("indexOf")]),v._v("。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("haystack")]),v._v(" Array"),o("br"),v._v(" "),o("code",[v._v("needle")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nNumber 索引位置，没找到则为 -1。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-info-objs"}},[v._v("Matter.Common.info(objs...)")]),v._v(" "),o("p",[v._v("展示"),o("code",[v._v("console.info")]),v._v("消息，前提是当前的"),o("code",[v._v("Common.logLevel")]),v._v("允许。消息前缀会加上'matter-js'以提高辨识度。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("objs")]),v._v(" Object "),o("code",[v._v("多个")]),v._v(" 要打印的信息。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-isarray-obj-→-boolean"}},[v._v("Matter.Common.isArray(obj) → Boolean")]),v._v(" "),o("p",[v._v("如果"),o("code",[v._v("obj")]),v._v("是一个数组则返回"),o("code",[v._v("true")]),v._v("。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nBoolean 如果对象是一个数组则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")]),v._v("。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-iselement-obj-→-boolean"}},[v._v("Matter.Common.isElement(obj) → Boolean")]),v._v(" "),o("p",[v._v("如果"),o("code",[v._v("obj")]),v._v("是一个"),o("code",[v._v("HTMLElement")]),v._v("则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")])]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nBoolean 如果对象是一个"),o("code",[v._v("HTMLElement")]),v._v("则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")]),v._v("。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-isfunction-obj-→-boolean"}},[v._v("Matter.Common.isFunction(obj) → Boolean")]),v._v(" "),o("p",[v._v("如果"),o("code",[v._v("obj")]),v._v("是一个函数则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")])]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nBoolean 如果对象是一个函数则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")]),v._v("。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-isplainobject-obj-→-boolean"}},[v._v("Matter.Common.isPlainObject(obj) → Boolean")]),v._v(" "),o("p",[v._v("如果"),o("code",[v._v("obj")]),v._v("是一个纯对象则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")])]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nBoolean 如果对象是一个纯对象则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")]),v._v("。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-isstring-obj-→-boolean"}},[v._v("Matter.Common.isString(obj) → Boolean")]),v._v(" "),o("p",[v._v("如果"),o("code",[v._v("obj")]),v._v("是一个字符串则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")])]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nBoolean 如果对象是一个字符串则返回"),o("code",[v._v("true")]),v._v("，否则返回"),o("code",[v._v("false")]),v._v("。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-keys-obj-→-string"}},[v._v("Matter.Common.keys(obj) → String[]")]),v._v(" "),o("p",[v._v("返回传入对象的键列表。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nString[] keys")]),v._v(" "),o("h3",{attrs:{id:"matter-common-log-objs"}},[v._v("Matter.Common.log(objs...)")]),v._v(" "),o("p",[v._v("展示"),o("code",[v._v("console.log")]),v._v("消息，前提是当前的"),o("code",[v._v("Common.logLevel")]),v._v("允许。消息前缀会加上'matter-js'以提高辨识度。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("objs")]),v._v(" Object "),o("code",[v._v("多个")]),v._v(" 要打印的信息。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-map-list-func-→-array"}},[v._v("Matter.Common.map(list, func) → Array")]),v._v(" "),o("p",[v._v("跨浏览器的"),o("code",[v._v("Array.map")]),v._v("方法。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("list")]),v._v("  Array"),o("br"),v._v(" "),o("code",[v._v("func")]),v._v("  Function")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),v._v("\nArray 映射后的值的数组。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-nextid-→-number"}},[v._v("Matter.Common.nextId() → Number")]),v._v(" "),o("p",[v._v("返回下一个连续的ID。")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),v._v("\nNumber 独一无二的连续ID。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-now-→-number"}},[v._v("Matter.Common.now() → Number")]),v._v(" "),o("p",[v._v("返回从时间原点(如从页面加载开始)的时间戳。")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),v._v("\nNumber 当前时间戳。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-random-min-max-→-number"}},[v._v("Matter.Common.random(min, max) → Number")]),v._v(" "),o("p",[v._v("返回一个介于最小值和最大值之间的随机值。该函数使用了随机种子生成器。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("min")]),v._v("  Number"),o("br"),v._v(" "),o("code",[v._v("max")]),v._v("  Number")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nNumber 最小值和最大值之间的随机值。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-set-obj-path-val-begin-end-→"}},[v._v("Matter.Common.set(obj, path, val, [begin], [end]) →")]),v._v(" "),o("p",[v._v("设置相对于传入"),o("code",[v._v("path")]),v._v("字符串的"),o("code",[v._v("base")]),v._v("。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v("  Object "),o("code",[v._v("base")]),v._v("对象。"),o("br"),v._v(" "),o("code",[v._v("path")]),v._v("  String 相对"),o("code",[v._v("base")]),v._v('的路径，例如："Foo.Bar.baz"。'),o("br"),v._v(" "),o("code",[v._v("val")]),v._v("  Object  要设置的值。"),o("br"),v._v(" "),o("code",[v._v("[begin]")]),v._v(" Number "),o("code",[v._v("可选")]),v._v(" 路径的开始"),o("br"),v._v(" "),o("code",[v._v("[end]")]),v._v(" Number "),o("code",[v._v("可选")]),v._v(" 路径的结束")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\n通过"),o("code",[v._v("val")]),v._v("进行链接。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-shuffle-array-→-array"}},[v._v("Matter.Common.shuffle(array) → Array")]),v._v(" "),o("p",[v._v("对给定的数组进行洗牌。该函数使用了随机种子生成器。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("array")]),v._v(" Array")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nArray 随机洗牌后的数组")]),v._v(" "),o("h3",{attrs:{id:"matter-common-sign-value-→-number"}},[v._v("Matter.Common.sign(value) → Number")]),v._v(" "),o("p",[v._v("返回传入值的的正/负号。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("value")]),v._v(" Number")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nNumber 如果是负值返回"),o("code",[v._v("-1")]),v._v("，如果是"),o("code",[v._v("0")]),v._v("或正值返回"),o("code",[v._v("+1")])]),v._v(" "),o("h3",{attrs:{id:"matter-common-topologicalsort-graph-→-array"}},[v._v("Matter.Common.topologicalSort(graph) → Array")]),v._v(" "),o("p",[v._v("获取一个有向图，并以拓扑顺序返回部分有序的顶点集合。允许循环依赖。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("graph")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nArray 按拓扑顺序排列的部分顶点的有序集合。")]),v._v(" "),o("h3",{attrs:{id:"matter-common-values-obj-→-array"}},[v._v("Matter.Common.values(obj) → Array")]),v._v(" "),o("p",[v._v("返回给定对象的值列表。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("obj")]),v._v(" Object")]),v._v(" "),o("p",[o("strong",[v._v("返回值：")]),o("br"),v._v("\nArray 对象属性值的数组")]),v._v(" "),o("h3",{attrs:{id:"matter-common-warn-objs"}},[v._v("Matter.Common.warn(objs...)")]),v._v(" "),o("p",[v._v("展示"),o("code",[v._v("console.warn")]),v._v("消息，前提是当前的"),o("code",[v._v("Common.logLevel")]),v._v("允许。消息前缀会加上'matter-js'以提高辨识度。")]),v._v(" "),o("p",[o("strong",[v._v("参数：")]),o("br"),v._v(" "),o("code",[v._v("objs")]),v._v(" Object "),o("code",[v._v("多个")]),v._v(" 要打印的信息。")]),v._v(" "),o("h2",{attrs:{id:"属性"}},[v._v("属性")]),v._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"center"}},[v._v("属性")]),v._v(" "),o("th",{staticStyle:{"text-align":"center"}},[v._v("类型")]),v._v(" "),o("th",{staticStyle:{"text-align":"center"}},[v._v("默认值")]),v._v(" "),o("th",[v._v("描述")])])]),v._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"center"}},[v._v("common.Common.logLevel")]),v._v(" "),o("td",{staticStyle:{"text-align":"center"}},[v._v("Number")]),v._v(" "),o("td",{staticStyle:{"text-align":"center"}},[o("code",[v._v("1")])]),v._v(" "),o("td",[v._v('控制台日志记录级别，其中每个级别都向上兼容，向下排除。默认级别是"debug"，它显示所有控制台消息。'),o("br"),v._v(" - 0 = None"),o("br"),v._v(" - 1 = Debug "),o("br"),v._v(" - 2 = Info "),o("br"),v._v(" - 3 = Warn"),o("br"),v._v(" - 4 = Error")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);