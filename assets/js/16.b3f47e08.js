(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{364:function(t,e,r){"use strict";r.r(e);var o=r(43),_=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"detector"}},[t._v("Detector")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/Detector.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文原地址"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("code",[t._v("Matter.Detector")]),t._v("模块包含了对给定的一组物体对的碰撞检测方法。")]),t._v(" "),r("h2",{attrs:{id:"方法"}},[t._v("方法")]),t._v(" "),r("h3",{attrs:{id:"matter-detector-cancollide-filtera-filterb-→-bool"}},[t._v("Matter.Detector.canCollide(filterA, filterB) → Bool")]),t._v(" "),r("p",[t._v("如果传入的两个碰撞过滤器允许碰撞，则返回"),r("code",[t._v("true")]),t._v("。参见"),r("code",[t._v("body.collisionFilter")]),t._v("获取更多信息。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("filterA")]),t._v(" Object"),r("br"),t._v(" "),r("code",[t._v("filterB")]),t._v(" Object")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),t._v("\nBool 如果可以发生碰撞，返回"),r("code",[t._v("true")])]),t._v(" "),r("h3",{attrs:{id:"matter-detector-collisions-broadphasepairs-engine-→-array"}},[t._v("Matter.Detector.collisions(broadphasePairs, engine) → Array")]),t._v(" "),r("p",[t._v("找到传入一组物体对的所有碰撞。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("broadphasePairs")]),t._v(" Pair[]"),r("br"),t._v(" "),r("code",[t._v("engine")]),t._v(" Engine")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),t._v("\nArray 碰撞数组。")])])}),[],!1,null,null,null);e.default=_.exports}}]);