(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{380:function(t,v,r){"use strict";r.r(v);var e=r(43),o=Object(e.a)({},(function(){var t=this,v=t.$createElement,r=t._self._c||v;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"vector"}},[t._v("Vector")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://brm.io/matter-js/docs/classes/Vector.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文原地址"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("code",[t._v("Matter.Vector")]),t._v("模块包含了创建和操作矢量的方法。矢量是引擎中所有几何相关操作的基础。"),r("code",[t._v("Matter.Vector")]),t._v("对象的形式是"),r("code",[t._v("{x: 0, y: 0}")]),t._v("。")]),t._v(" "),r("h2",{attrs:{id:"方法"}},[t._v("方法")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-add-vectora-vectorb-output-→-vector"}},[t._v("Matter.Vector.add(vectorA, vectorB, [output]) → Vector")]),t._v(" "),r("p",[t._v("添加两个矢量。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorB")]),t._v(" Vector\n"),r("code",[t._v("[output]")]),t._v(" Vector "),r("code",[t._v("可选")])]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 矢量A和B相加后形成的矢量。")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-angle-vectora-vectorb-→-number"}},[t._v("Matter.Vector.angle(vectorA, vectorB) → Number")]),t._v(" "),r("p",[t._v("返回"),r("code",[t._v("vectorB - vectorA")]),t._v("和X轴之间以弧度表示的夹角。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorB")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nNumber 以弧度表示的夹角")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-clone-vector-→-vector"}},[t._v("Matter.Vector.clone(vector) → Vector")]),t._v(" "),r("p",[t._v("根据传入的矢量返回一个克隆后的新矢量。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 克隆后的新矢量")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-create-x-y-→-vector"}},[t._v("Matter.Vector.create(x, y) → Vector")]),t._v(" "),r("p",[t._v("创建一个新的矢量。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("x")]),t._v(" Number"),r("br"),t._v(" "),r("code",[t._v("y")]),t._v(" Number")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 新的矢量")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-cross-vectora-vectorb-→-number"}},[t._v("Matter.Vector.cross(vectorA, vectorB) → Number")]),t._v(" "),r("p",[t._v("返回两个矢量的叉积(cross-product)。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorB")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nNumber 两个矢量的叉积")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-cross3-vectora-vectorb-vectorc-→-number"}},[t._v("Matter.Vector.cross3(vectorA, vectorB, vectorC) → Number")]),t._v(" "),r("p",[t._v("返回3个矢量的叉积。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorB")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorC")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nNumber 三个矢量的叉积")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-div-vector-scalar-→-vector"}},[t._v("Matter.Vector.div(vector, scalar) → Vector")]),t._v(" "),r("p",[t._v("将矢量和标量相除。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("scalar")]),t._v(" Number")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 除以标量后的矢量。")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-dot-vectora-vectorb-→-number"}},[t._v("Matter.Vector.dot(vectorA, vectorB) → Number")]),t._v(" "),r("p",[t._v("返回两个矢量的点积(dot-product)。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorB")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nNumber 两个矢量的点积")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-magnitude-vector-→-number"}},[t._v("Matter.Vector.magnitude(vector) → Number")]),t._v(" "),r("p",[t._v("返回实例的幅度(长度)。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nNumber 矢量的幅度")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-magnitudesquared-vector-→-number"}},[t._v("Matter.Vector.magnitudeSquared(vector) → Number")]),t._v(" "),r("p",[t._v("返回矢量(而且省去了"),r("code",[t._v("sqrt")]),t._v("操作)的幅度(长度)。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 矢量的幅度平方。")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-mult-vector-scalar-→-vector"}},[t._v("Matter.Vector.mult(vector, scalar) → Vector")]),t._v(" "),r("p",[t._v("将矢量和标量相乘。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("scalar")]),t._v(" Number")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 乘以标量后的新矢量。")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-neg-vector-→-vector"}},[t._v("Matter.Vector.neg(vector) → Vector")]),t._v(" "),r("p",[t._v("让矢量指向相反的方向。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 反向矢量。")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-normalise-vector-→-vector"}},[t._v("Matter.Vector.normalise(vector) → Vector")]),t._v(" "),r("p",[t._v("将矢量归一化(使其幅度为 1 )。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector")]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 归一化后的矢量。")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-perp-vector-negate-false-→-vector"}},[t._v("Matter.Vector.perp(vector, [negate=false]) → Vector")]),t._v(" "),r("p",[t._v("返回正交(垂直)矢量。"),r("code",[t._v("negate")]),t._v("设置为"),r("code",[t._v("true")]),t._v("的话会返回相反方向的正交矢量。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("[negate=false]")]),t._v(" Bool "),r("code",[t._v("可选")])]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 正交(垂直)矢量")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-rotate-vector-angle-output-→-vector"}},[t._v("Matter.Vector.rotate(vector, angle, [output]) → Vector")]),t._v(" "),r("p",[t._v("将矢量绕(0, 0)旋转指定角度。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("angle")]),t._v(" Number"),r("br"),t._v(" "),r("code",[t._v("[output]")]),t._v(" Vector "),r("code",[t._v("可选")])]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 绕(0, 0)旋转的矢量")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-rotateabout-vector-angle-point-output-→-vector"}},[t._v("Matter.Vector.rotateAbout(vector, angle, point, [output]) → Vector")]),t._v(" "),r("p",[t._v("将矢量绕指定的点旋转指定的角度。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vector")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("angle")]),t._v(" Number"),r("br"),t._v(" "),r("code",[t._v("point")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("[output]")]),t._v(" Vector "),r("code",[t._v("可选")])]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 绕指定的点旋转的矢量")]),t._v(" "),r("h3",{attrs:{id:"matter-vector-sub-vectora-vectorb-output-→-vector"}},[t._v("Matter.Vector.sub(vectorA, vectorB, [output]) → Vector")]),t._v(" "),r("p",[t._v("两个矢量相减。")]),t._v(" "),r("p",[r("strong",[t._v("参数：")]),r("br"),t._v(" "),r("code",[t._v("vectorA")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("vectorB")]),t._v(" Vector"),r("br"),t._v(" "),r("code",[t._v("[output]")]),t._v(" Vector "),r("code",[t._v("可选")])]),t._v(" "),r("p",[r("strong",[t._v("返回值：")]),r("br"),t._v("\nVector 矢量A和矢量B相减后得到的新矢量")])])}),[],!1,null,null,null);v.default=o.exports}}]);